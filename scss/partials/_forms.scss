/* ==========================================================================
   Forms
   ========================================================================== */

select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.inputbox {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

.control-group {
  margin-bottom: $form-group-margin-bottom;

  &.checkbox,
  &.radio {
    display: -ms-grid;
    display: grid;
    grid-template-areas: "label controls";
    -ms-grid-columns: 20px 1fr;
    grid-template-columns: 20px 1fr;
    align-items: center;
  }

  &.checkbox .control-label,
  &.radio .control-label {
    grid-area: controls;
    -ms-grid-row: 1;
    -ms-grid-column: 1;
    justify-self: start;
  }

  &.checkbox .inputbox,
  &.radio .inputbox {
    grid-area: label;
    -ms-grid-row: 1;
    -ms-grid-column: 2;
  }
}

.input-mini {
    width: 5em;
}

.input-small {
    width: 7em;
}

.input-medium {
  margin-right: .5rem;
}

.input-large {
    width: 15em;
}

.input-xlarge {
    width: 19em;
}

.input-xxlarge {
    width: 37em;
}

/* Forms inline
   ========================================================================== */

.form-inline .inputbox {
  display: inline-block;
  width: auto;
  vertical-align: middle;
}

/* Forms horizontal
   ========================================================================== */

.form-horizontal .inputbox {
  display: inline-block;
  width: auto;
  vertical-align: middle;
}

@include media-breakpoint-up(sm) {
  .form-horizontal {
    .control-group {
      display: -ms-grid;
      display: grid;
      grid-template-areas: "label controls";
      -ms-grid-columns: ($font-size-base * 10) $grid-gutter-width 1fr;
      grid-template-columns: ($font-size-base * 10) 1fr;
      grid-column-gap: $grid-gutter-width;
    }

    .control-label {
      grid-area: label;
      -ms-grid-row: 1;
      -ms-grid-column: 1;
    }

    .controls {
      grid-area: controls;
      -ms-grid-row: 1;
      -ms-grid-column: 2;
    }
  }
}
